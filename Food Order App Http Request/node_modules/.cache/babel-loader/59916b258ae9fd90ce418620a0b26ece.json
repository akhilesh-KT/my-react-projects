{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rajat\\\\Desktop\\\\my-react-projects\\\\Food Order App\\\\src\\\\store\\\\CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const updatedItems = state.items.concat(action.item);\n    const existingCardItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const existingCardItem = state.items[existingCardItemIndex];\n    if (existingCardItem) {\n      const updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  return defaultCartState;\n};\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  const addItemToCartHandler = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n  const removeItemFromCartHandler = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","updatedItems","concat","existingCardItemIndex","findIndex","id","existingCardItem","updatedItem","CartProvider","props","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","children"],"sources":["C:/Users/Rajat/Desktop/my-react-projects/Food Order App/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\n\nimport CartContext from \"./cart-context\";\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount =\n      state.totalAmount + action.item.price * action.item.amount;\n    const updatedItems = state.items.concat(action.item);\n    const existingCardItemIndex = state.items.findIndex(\n      (item) => item.id === action.item.id\n    );\n    const existingCardItem = state.items[existingCardItemIndex];\n\n    if (existingCardItem) {\n      const updatedItem = {\n        ...existingCardItem,\n        amount: existingCardItem.amount + action.item.amount,\n      };\n      updatedItems = [...state.items];\n      updatedItems[existingCardItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultCartState;\n};\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  const addItemToCartHandler = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCartHandler = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAElC,OAAOC,WAAW,MAAM,gBAAgB;AAAC;AAEzC,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,WAAW,GAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;EACrC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GACtBH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAC5D,MAAMC,YAAY,GAAGP,KAAK,CAACH,KAAK,CAACW,MAAM,CAACP,MAAM,CAACG,IAAI,CAAC;IACpD,MAAMK,qBAAqB,GAAGT,KAAK,CAACH,KAAK,CAACa,SAAS,CAChDN,IAAI,IAAKA,IAAI,CAACO,EAAE,KAAKV,MAAM,CAACG,IAAI,CAACO,EAAE,CACrC;IACD,MAAMC,gBAAgB,GAAGZ,KAAK,CAACH,KAAK,CAACY,qBAAqB,CAAC;IAE3D,IAAIG,gBAAgB,EAAE;MACpB,MAAMC,WAAW,GAAG;QAClB,GAAGD,gBAAgB;QACnBN,MAAM,EAAEM,gBAAgB,CAACN,MAAM,GAAGL,MAAM,CAACG,IAAI,CAACE;MAChD,CAAC;MACDC,YAAY,GAAG,CAAC,GAAGP,KAAK,CAACH,KAAK,CAAC;MAC/BU,YAAY,CAACE,qBAAqB,CAAC,GAAGI,WAAW;IACnD,CAAC,MAAM;MACLN,YAAY,GAAGP,KAAK,CAACH,KAAK,CAACW,MAAM,CAACP,MAAM,CAACG,IAAI,CAAC;IAChD;IAEA,OAAO;MACLP,KAAK,EAAEU,YAAY;MACnBT,WAAW,EAAEK;IACf,CAAC;EACH;EACA,OAAOP,gBAAgB;AACzB,CAAC;AAED,MAAMkB,YAAY,GAAIC,KAAK,IAAK;EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGvB,UAAU,CAChDK,WAAW,EACXH,gBAAgB,CACjB;EAED,MAAMsB,oBAAoB,GAAId,IAAI,IAAK;IACrCa,kBAAkB,CAAC;MAAEf,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAK,CAAC,CAAC;EACjD,CAAC;EAED,MAAMe,yBAAyB,GAAIR,EAAE,IAAK;IACxCM,kBAAkB,CAAC;MAAEf,IAAI,EAAE,QAAQ;MAAES,EAAE,EAAEA;IAAG,CAAC,CAAC;EAChD,CAAC;EAED,MAAMS,WAAW,GAAG;IAClBvB,KAAK,EAAEmB,SAAS,CAACnB,KAAK;IACtBC,WAAW,EAAEkB,SAAS,CAAClB,WAAW;IAClCuB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEC,WAAY;IAAA,UACtCL,KAAK,CAACQ;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GA1BIT,YAAY;AAAA,KAAZA,YAAY;AA4BlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module"}